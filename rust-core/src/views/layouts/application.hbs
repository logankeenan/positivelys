<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>
        {{> page_title}}
    </title>
    <link rel="stylesheet" href="{{assets_path}}/assets/app/css/styles.css" />
    <style>
        .border-bottom-gray {
            border-bottom: 1px solid #E6E6E6;
        }

        .ios-webview .main-nav, .android-webview .main-nav {
            display: none;
        }
    </style>

</head>
<body>
<script >
    if (window.webkit) {
        document.body.classList.add("ios-webview")
    }
    if (window.Android) {
        document.body.classList.add("android-webview")
    }
</script>
<nav class="main-nav navbar bg-white sticky-top border-bottom-gray">
    <span class="font-weight-bold  navbar-brand mb-0">Positivelys</span>
</nav>
{{> page_content}}
<script src="{{assets_path}}/assets/static/js/morphdom-umd.js"></script>
<script>

    async function makeWebAppRequest(url, method, bodyAsJson) {
        let response;

        if (method.toLowerCase() === "get") {
            response = await fetch(url);
        } else if (method.toLowerCase() === "post") {
            response = await fetch(url, {
                method: 'POST',
                redirect: 'follow',
                body: bodyAsJson
            });
        }

        const htmlResponse = await response.text();
        morphdom(document.documentElement, htmlResponse);
        history.pushState(undefined, undefined, response.url);
    }

    async function makeAppRequest(uri, method = 'GET', body = undefined) {
        if (window.webkit) {
            window.webkit.messageHandlers.makeAppRequest.postMessage(JSON.stringify({
                uri,
                method,
                body
            }));
        } else if (window.Android) {
            window.Android.makeAppRequest(JSON.stringify({
                uri,
                method,
                body
            }));
        } else {
            await makeWebAppRequest(uri, method, body)
        }
    }

    document.addEventListener('submit', async function (event) {
        event.preventDefault();

        const formData = new FormData(event.target);
        const data = Object.fromEntries(formData.entries());

        await makeAppRequest(event.target.action, event.target.method.toUpperCase(), JSON.stringify(data))
    });

    document.addEventListener('click', async function (event) {
        let anchorTag = event.target;
        if (anchorTag.tagName.toLowerCase() === "a") {
            event.preventDefault();

            await makeAppRequest(anchorTag.href)
        }
    });

    window.addEventListener('popstate', async function (event) {
        let url = event.target.location.toString();

        await makeAppRequest(url)
    });


</script>
<script src="{{assets_path}}/assets/static/js/jquery.slim.js"></script>
<script src="{{assets_path}}/assets/static/js/popper.js" ></script>
<script src="{{assets_path}}/assets/static/js/bootstrap.js"></script>
<script src="{{assets_path}}/assets/app/js/application.js"></script>
</body>
</html>